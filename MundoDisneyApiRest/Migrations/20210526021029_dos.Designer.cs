// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MundoDisneyApiRest.Models;

namespace MundoDisneyApiRest.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20210526021029_dos")]
    partial class dos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MundoDisneyApiRest.Models.Character", b =>
                {
                    b.Property<int>("IdCharacter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCharacter")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("edad");

                    b.Property<string>("Historia")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("historia");

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Peso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("peso");

                    b.HasKey("IdCharacter");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGenre")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdGenre");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.GenreMovieTVs", b =>
                {
                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<int>("IdMovieTV")
                        .HasColumnType("int");

                    b.HasKey("IdGenre", "IdMovieTV");

                    b.HasIndex("IdMovieTV");

                    b.ToTable("GenreMovieTVs");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.MovieTV", b =>
                {
                    b.Property<int>("IdMovieTV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovieTV")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("calificacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fechaCreacion");

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titulo");

                    b.HasKey("IdMovieTV");

                    b.ToTable("MovieTV");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.MovieTVsCharacter", b =>
                {
                    b.Property<int>("IdCharacter")
                        .HasColumnType("int");

                    b.Property<int>("IdMovieTV")
                        .HasColumnType("int");

                    b.HasKey("IdCharacter", "IdMovieTV");

                    b.HasIndex("IdMovieTV");

                    b.ToTable("MovieTVsCharacters");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.GenreMovieTVs", b =>
                {
                    b.HasOne("MundoDisneyApiRest.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MundoDisneyApiRest.Models.MovieTV", "MovieTV")
                        .WithMany()
                        .HasForeignKey("IdMovieTV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("MovieTV");
                });

            modelBuilder.Entity("MundoDisneyApiRest.Models.MovieTVsCharacter", b =>
                {
                    b.HasOne("MundoDisneyApiRest.Models.Character", "Character")
                        .WithMany()
                        .HasForeignKey("IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MundoDisneyApiRest.Models.MovieTV", "MovieTV")
                        .WithMany()
                        .HasForeignKey("IdMovieTV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("MovieTV");
                });
#pragma warning restore 612, 618
        }
    }
}
